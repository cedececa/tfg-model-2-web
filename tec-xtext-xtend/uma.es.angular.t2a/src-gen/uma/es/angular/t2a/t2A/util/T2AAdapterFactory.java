/**
 * generated by Xtext 2.26.0
 */
package uma.es.angular.t2a.t2A.util;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;

import org.eclipse.emf.ecore.EObject;

import uma.es.angular.t2a.t2A.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 * @see uma.es.angular.t2a.t2A.T2APackage
 * @generated
 */
public class T2AAdapterFactory extends AdapterFactoryImpl
{
  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static T2APackage modelPackage;

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public T2AAdapterFactory()
  {
    if (modelPackage == null)
    {
      modelPackage = T2APackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object)
  {
    if (object == modelPackage)
    {
      return true;
    }
    if (object instanceof EObject)
    {
      return ((EObject)object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected T2ASwitch<Adapter> modelSwitch =
    new T2ASwitch<Adapter>()
    {
      @Override
      public Adapter caseRoot(Root object)
      {
        return createRootAdapter();
      }
      @Override
      public Adapter caseElement(Element object)
      {
        return createElementAdapter();
      }
      @Override
      public Adapter casePage(Page object)
      {
        return createPageAdapter();
      }
      @Override
      public Adapter caseEDOM(EDOM object)
      {
        return createEDOMAdapter();
      }
      @Override
      public Adapter caseStyleGlobal(StyleGlobal object)
      {
        return createStyleGlobalAdapter();
      }
      @Override
      public Adapter caseStyleOnline(StyleOnline object)
      {
        return createStyleOnlineAdapter();
      }
      @Override
      public Adapter caseJSOnline(JSOnline object)
      {
        return createJSOnlineAdapter();
      }
      @Override
      public Adapter caseStyleClass(StyleClass object)
      {
        return createStyleClassAdapter();
      }
      @Override
      public Adapter caseSAttributeAndValue(SAttributeAndValue object)
      {
        return createSAttributeAndValueAdapter();
      }
      @Override
      public Adapter caseDOM(DOM object)
      {
        return createDOMAdapter();
      }
      @Override
      public Adapter caseComp(Comp object)
      {
        return createCompAdapter();
      }
      @Override
      public Adapter caseInstanciaEDOM(InstanciaEDOM object)
      {
        return createInstanciaEDOMAdapter();
      }
      @Override
      public Adapter caseInstanceEDOMFeature(InstanceEDOMFeature object)
      {
        return createInstanceEDOMFeatureAdapter();
      }
      @Override
      public Adapter casePageFeature(PageFeature object)
      {
        return createPageFeatureAdapter();
      }
      @Override
      public Adapter caseFeature(Feature object)
      {
        return createFeatureAdapter();
      }
      @Override
      public Adapter defaultCase(EObject object)
      {
        return createEObjectAdapter();
      }
    };

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target)
  {
    return modelSwitch.doSwitch((EObject)target);
  }


  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.Root <em>Root</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.Root
   * @generated
   */
  public Adapter createRootAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.Element <em>Element</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.Element
   * @generated
   */
  public Adapter createElementAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.Page <em>Page</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.Page
   * @generated
   */
  public Adapter createPageAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.EDOM <em>EDOM</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.EDOM
   * @generated
   */
  public Adapter createEDOMAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.StyleGlobal <em>Style Global</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.StyleGlobal
   * @generated
   */
  public Adapter createStyleGlobalAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.StyleOnline <em>Style Online</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.StyleOnline
   * @generated
   */
  public Adapter createStyleOnlineAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.JSOnline <em>JS Online</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.JSOnline
   * @generated
   */
  public Adapter createJSOnlineAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.StyleClass <em>Style Class</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.StyleClass
   * @generated
   */
  public Adapter createStyleClassAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.SAttributeAndValue <em>SAttribute And Value</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.SAttributeAndValue
   * @generated
   */
  public Adapter createSAttributeAndValueAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.DOM <em>DOM</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.DOM
   * @generated
   */
  public Adapter createDOMAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.Comp <em>Comp</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.Comp
   * @generated
   */
  public Adapter createCompAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.InstanciaEDOM <em>Instancia EDOM</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.InstanciaEDOM
   * @generated
   */
  public Adapter createInstanciaEDOMAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.InstanceEDOMFeature <em>Instance EDOM Feature</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.InstanceEDOMFeature
   * @generated
   */
  public Adapter createInstanceEDOMFeatureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.PageFeature <em>Page Feature</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.PageFeature
   * @generated
   */
  public Adapter createPageFeatureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link uma.es.angular.t2a.t2A.Feature <em>Feature</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @see uma.es.angular.t2a.t2A.Feature
   * @generated
   */
  public Adapter createFeatureAdapter()
  {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter()
  {
    return null;
  }

} //T2AAdapterFactory
